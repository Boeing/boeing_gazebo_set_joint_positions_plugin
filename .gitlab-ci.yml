image: docker:latest
stages:
  - lint
  - build
  - quality
  - test

variables:
  VERSION: 0.6.0
  CI_PORTAL_IMAGE: ${CI_REGISTRY_IMAGE}/portal:${CI_COMMIT_REF_SLUG}
  CI_DOCS_IMAGE: ${CI_REGISTRY_IMAGE}/docs:${CI_COMMIT_REF_SLUG}
  CI_UI_IMAGE: ${CI_REGISTRY_IMAGE}/ui:${CI_COMMIT_REF_SLUG}
  CI_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}

clang_format:
  stage: lint
  image: registry.web.boeing.com/robotics/continuous_integration/clang_format
  script:
    - run_clang_format.sh
  tags:
    - docker-executor
    - linux
    - docker

catkin_lint:
  stage: quality
  image: ${CI_IMAGE}-${VERSION}
  variables:
      GIT_STRATEGY: none
  before_script:
    - cd /root/ros
  script:
    - curl -s https://git.web.boeing.com/robotics/continuous_integration/raw/master/run_catkin_lint.sh | bash
  tags:
    - docker-executor
    - linux
    - docker

cppcheck:
  stage: quality
  image: ${CI_IMAGE}-${VERSION}
  variables:
      GIT_STRATEGY: none
  before_script:
    - cd /root/ros
  script:
    - curl -s https://git.web.boeing.com/robotics/continuous_integration/raw/master/run_cppcheck.sh | bash
  tags:
    - docker-executor
    - linux
    - docker

mypy:
  stage: quality
  image: ${CI_IMAGE}-${VERSION}
  variables:
      GIT_STRATEGY: none
  before_script:
    - cd /root/ros
  script:
    - curl -s https://git.web.boeing.com/robotics/continuous_integration/raw/master/run_mypy.sh | bash
  tags:
    - docker-executor
    - linux
    - docker

test:
  stage: test
  image: ${CI_IMAGE}
  variables:
      GIT_STRATEGY: none
  before_script:
    - cd /root/ros
  script:
    - catkin run_tests -j1 -i --no-status --no-notify
    - catkin_test_results --all --verbose
  tags:
    - docker-executor
    - linux
    - docker
